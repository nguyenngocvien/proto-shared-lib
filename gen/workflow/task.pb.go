// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.2
// source: workflow/task.proto

package worflow

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TaskId          string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	WorkflowId      string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	StepName        string                 `protobuf:"bytes,3,opt,name=step_name,json=stepName,proto3" json:"step_name,omitempty"`
	AssignedTo      string                 `protobuf:"bytes,4,opt,name=assigned_to,json=assignedTo,proto3" json:"assigned_to,omitempty"`
	CandidateUsers  []string               `protobuf:"bytes,5,rep,name=candidate_users,json=candidateUsers,proto3" json:"candidate_users,omitempty"`
	CandidateGroups []string               `protobuf:"bytes,6,rep,name=candidate_groups,json=candidateGroups,proto3" json:"candidate_groups,omitempty"`
	Data            map[string]string      `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Status          string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"` // e.g., "NEW", "CLAIMED", "COMPLETED"
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TaskInfo) Reset() {
	*x = TaskInfo{}
	mi := &file_workflow_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInfo) ProtoMessage() {}

func (x *TaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInfo.ProtoReflect.Descriptor instead.
func (*TaskInfo) Descriptor() ([]byte, []int) {
	return file_workflow_task_proto_rawDescGZIP(), []int{0}
}

func (x *TaskInfo) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskInfo) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *TaskInfo) GetStepName() string {
	if x != nil {
		return x.StepName
	}
	return ""
}

func (x *TaskInfo) GetAssignedTo() string {
	if x != nil {
		return x.AssignedTo
	}
	return ""
}

func (x *TaskInfo) GetCandidateUsers() []string {
	if x != nil {
		return x.CandidateUsers
	}
	return nil
}

func (x *TaskInfo) GetCandidateGroups() []string {
	if x != nil {
		return x.CandidateGroups
	}
	return nil
}

func (x *TaskInfo) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TaskInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_workflow_task_proto protoreflect.FileDescriptor

const file_workflow_task_proto_rawDesc = "" +
	"\n" +
	"\x13workflow/task.proto\x12\bworkflow\"\xd9\x02\n" +
	"\bTaskInfo\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x1b\n" +
	"\tstep_name\x18\x03 \x01(\tR\bstepName\x12\x1f\n" +
	"\vassigned_to\x18\x04 \x01(\tR\n" +
	"assignedTo\x12'\n" +
	"\x0fcandidate_users\x18\x05 \x03(\tR\x0ecandidateUsers\x12)\n" +
	"\x10candidate_groups\x18\x06 \x03(\tR\x0fcandidateGroups\x120\n" +
	"\x04data\x18\a \x03(\v2\x1c.workflow.TaskInfo.DataEntryR\x04data\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B8Z6github.com/nguyenngocvien/proto-shared-lib/gen/worflowb\x06proto3"

var (
	file_workflow_task_proto_rawDescOnce sync.Once
	file_workflow_task_proto_rawDescData []byte
)

func file_workflow_task_proto_rawDescGZIP() []byte {
	file_workflow_task_proto_rawDescOnce.Do(func() {
		file_workflow_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_workflow_task_proto_rawDesc), len(file_workflow_task_proto_rawDesc)))
	})
	return file_workflow_task_proto_rawDescData
}

var file_workflow_task_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_workflow_task_proto_goTypes = []any{
	(*TaskInfo)(nil), // 0: workflow.TaskInfo
	nil,              // 1: workflow.TaskInfo.DataEntry
}
var file_workflow_task_proto_depIdxs = []int32{
	1, // 0: workflow.TaskInfo.data:type_name -> workflow.TaskInfo.DataEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_workflow_task_proto_init() }
func file_workflow_task_proto_init() {
	if File_workflow_task_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_workflow_task_proto_rawDesc), len(file_workflow_task_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_workflow_task_proto_goTypes,
		DependencyIndexes: file_workflow_task_proto_depIdxs,
		MessageInfos:      file_workflow_task_proto_msgTypes,
	}.Build()
	File_workflow_task_proto = out.File
	file_workflow_task_proto_goTypes = nil
	file_workflow_task_proto_depIdxs = nil
}
